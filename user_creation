#!usr/bin/bash/env bash

# Initializing variables
uid=""
gid=""
homedir=""
shell="/bin/bash" #Default shell
username=""

./user_creation.sh
# Function to display usage
usage() {
  echo "Usage: $0 [-u uid] [-g gid] [-h homedir] [-s shell] username"
  echo ""
  echo "Options:"
  echo "  -u: uid       Specify the user ID (UID) | Omit: Defaults to next available UID"
  echo "  -g: gid       Specify the group ID (GID) | Omit: Defaults to a group with the same name as the username"
  echo "  -s: shell     Specify home directory | Omit: Defaults to /bin/bash"
  echo "  username      Specify username of the new user | Required"
  exit 1
}

#Parse command line options
while getopts ":u:g:h:s" opt;
do
  case $opt in
    u)
    uid="$OPTARG"
    ;;
  g)
    gid="$OPTARG"
    ;;
  h)
    homedir="$OPTARG"
  s) 
    shell="$OPTARG"
    ;;
  ?)
    echo "Invalid option: -$OPTARG"
    usage
    ;;
  :)
    echo "Option -$OPTARG requires an arugument."
    usage
    ;;
  esac
done

shift $(($OPTIND -1))

username="$1"

if [ -z "$username" ];
then 
  echo "Error: Username is required"
  usage
fi

if [ -z "$uid" ];
then
  uid=1000
  while cut -d : -f3 /etc/passwd | grep -x $uid > /dev/null;
  do
    uid=$((uid+1)) > /dev/null
  done 
fi 

if [ -z "$gid" ];
then
  gid=$(grep users /etc/group | cut -d: -f3)
fi

if [ -z "$homedir" ];
then
  homedir=/home/$1
fi
if [ -z "$shell" ];
then echo "Error: shell is required"
else 
  shell="/bin/bash"

fi

# Add user to /etc/passwd and /etc/shadow
echo $1:x:$uid:$gid:$homedir:$shell >> /etc/passwd
echo "$username:!::::::" >> /etc/shadow

# Create home directory and copy skeleton files
mkdir -p $homedir
cp -r /etc/skel/, $homedir

#set permissions and owernship
chmod 755 $homedir
chown $usernmae:$username $homedir
#set user password
passwd $username



